/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";
    };

    combos {
        compatible = "zmk,combos";

        KeyboardSettingsLayer {
            bindings = <&mo 5>;
            key-positions = <56 57 58 59>;
        };

        ChangeKeymap {
            bindings = <&WinSpace>;
            key-positions = <36 54>;
        };

        Escape-one-handed {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        TravelMode {
            bindings = <&tog 6>;
            key-positions = <0 50 59 11>;
        };
    };

    macros {
        CtrlZ: CtrlZ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp Z>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRLZ";
        };

        CtrlY: CtrlY {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp Y>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "CTRLY";
        };

        WinSpace: WinSpace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LEFT_WIN>;

            label = "WINSPACE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE   &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                                   &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB     &kp Q   &kp W   &kp E     &kp R     &kp T                                    &kp Y   &kp U   &kp I      &kp O    &kp P     &kp LEFT_BRACKET
&kp LSHIFT  &kp A   &kp S   &kp D     &kp F     &kp G                                    &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL   &kp Z   &kp X   &kp C     &kp V     &kp B          &kp LC(N0)    &kp C_MUTE  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp BACKSLASH
                    &mo 5   &kp LWIN  &kp LALT  &kp BACKSPACE  &kp SPACE     &kp ENTER   &mo 1   &mo 2   &mo 3      &mo 4
            >;

            sensor-bindings =
                <&inc_dec_kp LC(EQUAL) LC(MINUS)>,
                <&inc_dec_kp C_VOL_UP C_VOL_DN>;

            label = "^_^";
        };

        f-nav-alt {
            display-name = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&kp ESC  &kp F1      &kp F2     &kp F3      &kp F4       &kp F5                       &kp F6    &kp F7             &kp F8       &kp F9     &kp F10        &kp EQUAL
&trans   &trans      &trans     &trans      &trans       &kp GRAVE                    &kp HOME  &kp PAGE_DOWN      &kp PAGE_UP  &kp END    &kp F11        &kp RIGHT_BRACKET
&trans   &trans      &trans     &trans      &trans       &trans                       &kp LEFT  &kp DOWN           &kp UP       &kp RIGHT  &kp F12        &trans
&trans   &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp LS(INS)  &trans     &trans    &trans  &trans    &kp RIGHT_BRACKET  &trans       &trans     &kp BACKSLASH  &kp PIPE
                     &trans     &trans      &trans       &kp DEL    &trans    &trans  &trans    &trans             &trans       &trans
            >;

            label = "f-nav-alt";
            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        code {
            bindings = <
&trans         &kt GRAVE      &kt LS(LPAR)  &kt LS(RPAR)   &kt SEMI      &kt COMMA                        &trans         &trans        &trans         &kp LS(LPAR)  &kp LS(RPAR)   &kp MINUS
&kp LS(EXCL)   &kp LS(LBRC)   &kp SQT       &kp LS(DQT)    &kp LS(RBRC)  &kp LS(QMARK)                    &trans         &kp LS(STAR)  &kp LS(POUND)  &kp LBKT      &kp RBKT       &kp SEMI
&kp LS(POUND)  &kp LS(CARET)  &kp EQUAL     &kp LS(UNDER)  &kp LS(DLLR)  &kp LS(STAR)                     &kp LS(PRCNT)  &kp LS(AMPS)  &kp LS(AT)     &kp LS(LBRC)  &kp LS(RBRC)   &kp SQT
&kp LS(TILDE)  &kp LS(LT)     &kp LS(PIPE)  &kp MINUS      &kp LS(GT)    &kp FSLH       &trans    &trans  &kp LS(CARET)  &kp LS(DLLR)  &kp LS(LT)     &kp LS(GT)    &kp BACKSLASH  &kp LS(PIPE)
                              &trans        &trans         &trans        &CtrlZ         &CtrlY    &trans  &trans         &trans        &trans         &trans
            >;

            label = "code";
        };

        Fn1 {
            bindings = <
&trans    &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &kp KP_NUMLOCK  &kp SCROLLLOCK  &kp PRINTSCREEN
&trans    &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans          &trans          &trans
&kp CAPS  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans          &trans          &trans
&trans    &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans          &trans          &trans
                  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            label = "Fn1";
        };

        empty {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            label = "empty";
        };

        kb_func {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            display-name = "adjust";
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none  &none  &none  &none  &none  &none
&none       &none         &none         &none         &none         &none                         &none  &none  &none  &none  &none  &none
&none       &none         &none         &none         &none         &none                         &none  &none  &none  &none  &none  &none
&none       &none         &none         &none         &none         &none         &none    &none  &none  &none  &none  &none  &none  &none
                          &none         &none         &none         &none         &none    &none  &none  &none  &none  &none
            >;

            label = "kb_func";
        };

        travel {
            bindings = <
&none  &none  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none  &none
              &none  &none  &none  &none  &none    &none  &none  &none  &none  &none
            >;

            label = "travel";
        };
    };
};
